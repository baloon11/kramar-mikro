def confirmation(request,**kwargs):
    if request.method == 'POST': 
        form=Confirmation(request.POST)
        if form.is_valid():
            new_buying=Orders( num=kwargs['num'],
                           fio=kwargs['fio'],
                           tel=kwargs['tel'],
                           city=kwargs['city'],
                           transport_company=kwargs['transport_company'],
                           payment_method=kwargs['cod_or_bankcard'],
                           additional_information=kwargs['additional_information'] )
            new_buying.save()
            return HttpResponseRedirect (reverse('confirmation', kwargs=all_context))
            return render_to_response('start.html',{'thanks_for_buying':Tech_Info.objects.get(id=1).thanks_for_buying},   
                                       context_instance=RequestContext(request) )

    else:

        if len(kwargs)==0:
            return render_to_response('confirmation.html',
                                     {'confirmation_accidentally_text':Tech_Info.objects.get(id=1).confirmation_accidentally_text}, 
                                     context_instance=RequestContext(request) )

        else:   
            return render_to_response('confirmation.html',kwargs, 
                                   context_instance=RequestContext(request) )    


def order_save(request,**kwargs):
    new_buying=Orders(num=kwargs['num'],
                      sum_price=kwargs['s'],
                      fio=kwargs['fio'],
                      tel=kwargs['tel'],
                      city=kwargs['city'],
                      transport_company=kwargs['transport_company'],
                      payment_method=kwargs['cod_or_bankcard'],
                      additional_information=kwargs['additional_information'] )
    new_buying.save()
    return render_to_response('order_save.html',{'num':kwargs['num'],'tel':kwargs['tel']},   
                               context_instance=RequestContext(request) )
   
   # return render_to_response('start.html',{'thanks_for_buying':Tech_Info.objects.get(id=1).thanks_for_buying},   
    #                           context_instance=RequestContext(request) )

<a class="btn btn-inverse"
href="{% url 'order_save' num=num,
                          s=s,
                          fio=fio,
                          tel=tel, 
                          city=city, 
                          transport_company=transport_company,
                          payment_method=payment_method,
                          additional_information=additional_information %}">
{{tech_info.label_confirmation_button}} </a>


def confirmation(request,**kwargs):
    if request.method == 'POST':

        new_buying=Orders(num=kwargs['num'],
                      sum_price=kwargs['s'],
                      fio=kwargs['fio'],
                      tel=kwargs['tel'],
                      city=kwargs['city'],
                      transport_company=kwargs['transport_company'],
                      payment_method=kwargs['cod_or_bankcard'],
                      additional_information=kwargs['additional_information'] )
        new_buying.save()

        return render_to_response('start.html',{'thanks_for_buying':Tech_Info.objects.get(id=1).thanks_for_buying},   
                               context_instance=RequestContext(request) )
    else:

        return render_to_response('confirmation.html',
                                   context_instance=RequestContext(request) )   
        


вот такой вопрос возник --может ты знаешь   есть тег {%url%}. через него можно в нужное представление передавать позиционные аргументы. можно передавать как позиционный аргумент шаблонную переменную тип такого

        <table>
<tr>    <td> {{fio}}</td> </tr>
<tr>    <td> {{tel}}</td> </tr>
<tr>    <td> {{city}}</td> </tr>
<tr>   <td> {{transport_company}}</td> </tr>
<tr>   <td> {{cod_or_bankcard}}</td> </tr>
<tr>   <td> {{additional_information}}</td> </tr>
</table>


<a class="btn btn-inverse"
href="{% url 'order_save' num=num,
                          s=s,
                          fio=fio,
                          tel=tel, 
                          city=city, 
                          transport_company=transport_company,
                          payment_method=payment_method,
                          additional_information=additional_information %}">

{{tech_info.label_confirmation_button}} </a>   
 т е эти все фио и телефоны--это шаблонные переменные.

 Раньше я присваивал именнованным аргументам только  значение атрибутов  типа такого
 href="{% url 'static_page' num=static_page.num %}">{{static_page.title}} </a>
static_page.title-значение из модели-- всеработало, а вот просто прередать шаблонную переменную чето не выходит

def confirmation(request,**kwargs):
    if request.method == 'POST':
        return HttpResponseRedirect (reverse('confirmation_save', kwargs=kwargs))
        
    else:

       # return render_to_response('confirmation.html',
        #                           context_instance=RequestContext(request) )   
        return HttpResponseRedirect (reverse('confirmation_save', kwargs=kwargs))
def confirmation_save(request,**kvargs):
    new_buying=Orders(num=kwargs['num'],
                      sum_price=kwargs['s'],
                      fio=kwargs['fio'],
                      tel=kwargs['tel'],
                      city=kwargs['city'],
                      transport_company=kwargs['transport_company'],
                      payment_method=kwargs['cod_or_bankcard'],
                      additional_information=kwargs['additional_information'] )
    new_buying.save()

    return render_to_response('start.html',{'thanks_for_buying':Tech_Info.objects.get(id=1).thanks_for_buying},   
                               context_instance=RequestContext(request) )